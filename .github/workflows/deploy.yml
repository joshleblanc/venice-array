name: Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging
      skip_tests:
        description: 'Skip running tests before deploy'
        required: false
        default: false
        type: boolean

env:
  KAMAL_REGISTRY_PASSWORD: ${{ secrets.KAMAL_REGISTRY_PASSWORD }}
  RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}

jobs:
  # Run tests before deployment (unless skipped)
  test:
    runs-on: ubuntu-latest
    if: ${{ !github.event.inputs.skip_tests }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Run security scans
        run: |
          bin/brakeman --no-pager
          bin/importmap audit

      - name: Run tests
        env:
          RAILS_ENV: test
        run: |
          bin/rails db:test:prepare
          bin/rails test

  deploy:
    runs-on: ubuntu-latest
    needs: [test]
    if: always() && (needs.test.result == 'success' || needs.test.result == 'skipped')
    
    environment: 
      name: ${{ github.event.inputs.environment || 'production' }}
      url: https://array.jleb.dev
    
    outputs:
      deployment-id: ${{ steps.deployment.outputs.deployment-id }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Install Kamal
        run: gem install kamal

      - name: Set up SSH Agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: |
            ${{ secrets.KAMAL_SSH_PRIVATE_KEY }}
            ${{ secrets.BUILDER_SSH_PRIVATE_KEY }}

      - name: Configure SSH known hosts
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          
          # Add all servers to known hosts
          ssh-keyscan -H 138.197.155.169 >> ~/.ssh/known_hosts 2>/dev/null || echo "Failed to add web server to known hosts"
          ssh-keyscan -H 165.227.38.242 >> ~/.ssh/known_hosts 2>/dev/null || echo "Failed to add builder to known hosts"
          ssh-keyscan -H registry.jleb.dev >> ~/.ssh/known_hosts 2>/dev/null || echo "Failed to add registry to known hosts"
          
          chmod 644 ~/.ssh/known_hosts

      - name: Verify SSH connections
        run: |
          echo "🔐 Testing SSH connections..."
          
          # Test web server connection
          ssh -o ConnectTimeout=10 -o BatchMode=yes root@138.197.155.169 "echo 'Web server connection: OK'" || {
            echo "❌ Failed to connect to web server"
            exit 1
          }
          
          # Test builder connection
          ssh -o ConnectTimeout=10 -o BatchMode=yes root@165.227.38.242 "echo 'Builder connection: OK'" || {
            echo "❌ Failed to connect to builder server"
            exit 1
          }
          
          echo "✅ All SSH connections verified"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create Kamal secrets file
        run: |
          mkdir -p .kamal
          cat > .kamal/secrets << 'EOF'
          # Secrets for GitHub Actions deployment
          KAMAL_REGISTRY_PASSWORD=${{ secrets.KAMAL_REGISTRY_PASSWORD }}
          RAILS_MASTER_KEY=${{ secrets.RAILS_MASTER_KEY }}
          EOF
          
          # Verify secrets are not empty
          if [ -z "${{ secrets.KAMAL_REGISTRY_PASSWORD }}" ]; then
            echo "❌ KAMAL_REGISTRY_PASSWORD is not set"
            exit 1
          fi
          
          if [ -z "${{ secrets.RAILS_MASTER_KEY }}" ]; then
            echo "❌ RAILS_MASTER_KEY is not set"
            exit 1
          fi
          
          echo "✅ Secrets configured"

      - name: Validate Kamal configuration
        run: |
          echo "🔍 Validating Kamal configuration..."
          kamal config || {
            echo "❌ Kamal configuration is invalid"
            exit 1
          }
          echo "✅ Kamal configuration is valid"

      - name: Create deployment record
        id: deployment
        run: |
          DEPLOYMENT_ID="deploy-$(date +%Y%m%d-%H%M%S)-${GITHUB_SHA:0:7}"
          echo "deployment-id=$DEPLOYMENT_ID" >> $GITHUB_OUTPUT
          echo "📝 Deployment ID: $DEPLOYMENT_ID"

      - name: Deploy with Kamal
        id: kamal-deploy
        run: |
          echo "🚀 Starting deployment to ${{ github.event.inputs.environment || 'production' }}"
          echo "📦 Deploying commit: ${GITHUB_SHA:0:7}"
          echo "🏷️  Deployment ID: ${{ steps.deployment.outputs.deployment-id }}"
          
          # Run deployment with timeout
          timeout 1800 kamal deploy || {
            echo "❌ Deployment timed out or failed"
            exit 1
          }
          
          echo "✅ Kamal deployment completed"

      - name: Wait for application startup
        run: |
          echo "⏳ Waiting for application to start..."
          sleep 45

      - name: Run comprehensive health checks
        run: |
          echo "🏥 Running health checks..."
          
          # Basic health check
          for i in {1..5}; do
            if curl -f -s --max-time 10 https://array.jleb.dev/up; then
              echo "✅ Health check $i/5: PASSED"
              break
            else
              echo "⚠️  Health check $i/5: FAILED (retrying in 10s)"
              if [ $i -eq 5 ]; then
                echo "❌ All health checks failed"
                exit 1
              fi
              sleep 10
            fi
          done
          
          # Additional checks
          echo "🔍 Running additional checks..."
          
          # Check if the app responds with expected content
          if curl -s https://array.jleb.dev | grep -q "Venice Array"; then
            echo "✅ Application content check: PASSED"
          else
            echo "⚠️  Application content check: WARNING (app may still be starting)"
          fi
          
          echo "✅ All health checks completed successfully"

      - name: Cleanup on failure
        if: failure()
        run: |
          echo "🧹 Cleaning up failed deployment..."
          
          # Attempt to rollback (if this isn't the first deployment)
          kamal rollback || echo "⚠️  Rollback failed or not applicable"
          
          echo "❌ Deployment failed and cleanup attempted"

      - name: Post-deployment summary
        if: success()
        run: |
          echo "🎉 Deployment Summary"
          echo "===================="
          echo "✅ Status: SUCCESS"
          echo "🌐 URL: https://array.jleb.dev"
          echo "📦 Commit: ${GITHUB_SHA:0:7}"
          echo "🏷️  Deployment ID: ${{ steps.deployment.outputs.deployment-id }}"
          echo "⏰ Completed at: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
          echo ""
          echo "🔗 Quick Links:"
          echo "   • Application: https://array.jleb.dev"
          echo "   • Health Check: https://array.jleb.dev/up"
          echo "   • Logs: kamal app logs"

  # Optional: Add a rollback job that can be triggered manually
  rollback:
    runs-on: ubuntu-latest
    if: failure() && github.event_name == 'workflow_dispatch'
    needs: [deploy]
    
    environment: 
      name: ${{ github.event.inputs.environment || 'production' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Install Kamal
        run: gem install kamal

      - name: Set up SSH Agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: |
            ${{ secrets.KAMAL_SSH_PRIVATE_KEY }}
            ${{ secrets.BUILDER_SSH_PRIVATE_KEY }}

      - name: Configure SSH known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H 138.197.155.169 >> ~/.ssh/known_hosts
          ssh-keyscan -H 165.227.38.242 >> ~/.ssh/known_hosts
          ssh-keyscan -H registry.jleb.dev >> ~/.ssh/known_hosts

      - name: Create Kamal secrets file
        run: |
          mkdir -p .kamal
          cat > .kamal/secrets << 'EOF'
          KAMAL_REGISTRY_PASSWORD=${{ secrets.KAMAL_REGISTRY_PASSWORD }}
          RAILS_MASTER_KEY=${{ secrets.RAILS_MASTER_KEY }}
          EOF

      - name: Rollback deployment
        run: |
          echo "🔄 Rolling back deployment..."
          kamal rollback
          echo "✅ Rollback completed"